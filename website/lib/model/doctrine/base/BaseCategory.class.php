<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $comment
 * @property Doctrine_Collection $Charges
 * @property Doctrine_Collection $Charts
 * @property Doctrine_Collection $ChartVehicles
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method clob                getComment()       Returns the current record's "comment" value
 * @method Doctrine_Collection getCharges()       Returns the current record's "Charges" collection
 * @method Doctrine_Collection getCharts()        Returns the current record's "Charts" collection
 * @method Doctrine_Collection getChartVehicles() Returns the current record's "ChartVehicles" collection
 * @method Category            setId()            Sets the current record's "id" value
 * @method Category            setName()          Sets the current record's "name" value
 * @method Category            setComment()       Sets the current record's "comment" value
 * @method Category            setCharges()       Sets the current record's "Charges" collection
 * @method Category            setCharts()        Sets the current record's "Charts" collection
 * @method Category            setChartVehicles() Sets the current record's "ChartVehicles" collection
 * 
 * @package    otokou
 * @subpackage model
 * @author     Raffaele Bolliger
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 50,
             ));
        $this->hasColumn('comment', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Charge as Charges', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('Chart as Charts', array(
             'refClass' => 'ChartCategory',
             'local' => 'category_id',
             'foreign' => 'chart_id'));

        $this->hasMany('ChartCategory as ChartVehicles', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}
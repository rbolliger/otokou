<?php

/**
 * BaseCharge
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $vehicle_id
 * @property integer $user_id
 * @property integer $category_id
 * @property date $date
 * @property double $kilometers
 * @property double $amount
 * @property clob $comment
 * @property double $quantity
 * @property Vehicle $Vehicle
 * @property Category $Category
 * @property sfGuardUser $User
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method integer     getVehicleId()   Returns the current record's "vehicle_id" value
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method integer     getCategoryId()  Returns the current record's "category_id" value
 * @method date        getDate()        Returns the current record's "date" value
 * @method double      getKilometers()  Returns the current record's "kilometers" value
 * @method double      getAmount()      Returns the current record's "amount" value
 * @method clob        getComment()     Returns the current record's "comment" value
 * @method double      getQuantity()    Returns the current record's "quantity" value
 * @method Vehicle     getVehicle()     Returns the current record's "Vehicle" value
 * @method Category    getCategory()    Returns the current record's "Category" value
 * @method sfGuardUser getUser()        Returns the current record's "User" value
 * @method Charge      setId()          Sets the current record's "id" value
 * @method Charge      setVehicleId()   Sets the current record's "vehicle_id" value
 * @method Charge      setUserId()      Sets the current record's "user_id" value
 * @method Charge      setCategoryId()  Sets the current record's "category_id" value
 * @method Charge      setDate()        Sets the current record's "date" value
 * @method Charge      setKilometers()  Sets the current record's "kilometers" value
 * @method Charge      setAmount()      Sets the current record's "amount" value
 * @method Charge      setComment()     Sets the current record's "comment" value
 * @method Charge      setQuantity()    Sets the current record's "quantity" value
 * @method Charge      setVehicle()     Sets the current record's "Vehicle" value
 * @method Charge      setCategory()    Sets the current record's "Category" value
 * @method Charge      setUser()        Sets the current record's "User" value
 * 
 * @package    otokou
 * @subpackage model
 * @author     Raffaele Bolliger
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCharge extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('charge');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('vehicle_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('kilometers', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('amount', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('comment', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('quantity', 'double', null, array(
             'type' => 'double',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Vehicle', array(
             'local' => 'vehicle_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}